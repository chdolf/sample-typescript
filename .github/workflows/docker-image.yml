name: Docker Image CI

on:
  push:
    branches: [ dev ]
    paths-ignore:
        - '**/*.yaml'
  pull_request:
    branches: [ dev ]
    paths-ignore:
        - '**/*.yaml'
        
permissions:
  contents: read
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Docker Login
  # You may pin to the exact commit or the version.
  # uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7
      uses: docker/login-action@v1.14.1
      with:
    # Server address of Docker registry. If not set then will default to Docker Hub
       registry: demoactions.jfrog.io
    # Username used to log against the Docker registry
    
       username: locace1979@azteen.com
    # Password or personal access token used to log against the Docker registry
       password: Devopsengg@123

    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag demoactions.jfrog.io/typescript/image:latest
        docker push demoactions.jfrog.io/typescript/image:latest
    
    
    - name: Login Jira
      id: Login_Jira
      uses: atlassian/gajira-login@master
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      
    - name: SonarQube Scan
      id: SonarQube_code_scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        
    - name: SonarQube Quality Gate check
      id: sonarqube_quality_gate_check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
    - name: Run Checkov action
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: dev/
        quiet: true # optional: display only failed checks
        soft_fail: true # optional: do not return an error code if there are failed checks
        framework: all # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
        output_format: sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
        download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry
        log_level: DEBUG # optional: set log level. Default WARNING
        container_user: 1000 # optional
        
    - name: Run Bridgecrew 
      id: Bridgecrew
      uses: bridgecrewio/bridgecrew-action@master 
      with:
        directory: dev/
        api-key: ${{ secrets.BC_API_KEY }}
        quiet: true
        soft_fail: true
        output_format: sarif
        container_user: 1000 # optional
        
    - uses: mr-smithers-excellent/docker-build-push@v5
      name: Build & push Docker image
      id: docker_build_and_push
      with:
        image: typescript/typescript-image
        tags: ${{github.run_number}}
        registry: demoactions.jfrog.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Run Trivy vulnerability scanner
      id: trivy_scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'demoactions.jfrog.io/typescript/typescript-image:${{github.run_number}}'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        
    - name: Run Snyk to check Docker image for vulnerabilities
      id: run_snyk
      uses: snyk/actions/docker@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: demoactions.jfrog.io/typescript/typescript-image:${{github.run_number}}
        args: --json-file-output=snyk.json
      
    - name: json to html report
      id: snyk_results_json_to_html
      run: |
        npm install snyk-to-html -g
        snyk-to-html -i snyk.json -o results.html
        
    - uses: actions/upload-artifact@v3
      with:
        name: snyk_results
        path: results.html
    
    - name: Update dev/deploy.yaml
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: 'dev/deployment.yaml'
        propertyPath: 'spec.template.spec.containers[0].image'
        value: demoactions.jfrog.io/typescript/typescript-image:${{github.run_number}}
        commitChange: true
        updateFile: true
        targetBranch: dev
        branch: dev
        token: ${{ secrets.TOKEN }}
        
    - name: Update qa/deploy.yaml
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: 'qa/deployment.yaml'
        propertyPath: 'spec.template.spec.containers[0].image'
        value: demoactions.jfrog.io/typescript/typescript-image:${{github.run_number}}
        commitChange: true
        updateFile: true
        targetBranch: dev
        branch: dev
        token: ${{ secrets.TOKEN }}
        
    - name: Update prod/deploy.yaml
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: 'prod/deployment.yaml'
        propertyPath: 'spec.template.spec.containers[0].image'
        value: demoactions.jfrog.io/typescript/typescript-image:${{github.run_number}}
        commitChange: true
        updateFile: true
        targetBranch: dev
        branch: dev
        token: ${{ secrets.TOKEN }}
        
    - name: Create ticket in jira
      uses: atlassian/gajira-create@master
      if: failure()
      with:
        project: DEV
        issuetype: Bug
        summary: |
          Build Failed for Repository: ${{ github.repository }}
        description: |
          Build failed for ${{ github.repository }}. Please find the details below:
          ${{ toJson(steps) }}
    
    - name: change mode
      if: always()
      run: chmod +x sendgrid.js
     
    - name: SendGrid
      if: always()
      uses: peter-evans/sendgrid-action@v1
      env:
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        STEPS_STATUS: ${{ toJson(steps) }}
        REPOSITORY: ${{ github.repository }}
        SCRIPT_FILEPATH: ./sendgrid.js
